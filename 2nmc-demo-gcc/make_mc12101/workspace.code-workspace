{
	"folders": [
		{
			"path": "."
		},
		{
			"path": "../src_host"
		},
		{
			"path": "../src_target0"
		},
		{
			"path": "../src_target1"
		},
		{
			"path": "../../include"
		},
		{
			"path": "../../src_proc0"
		},
		{
			"path": "../../src_proc1"
		},
		{
			"path": "../../nmglvs_mc12101-gcc"
		}
	],

	"tasks": {
		"version": "2.0.0",
		"tasks": [
			{
				"label": "run nm",
				"type": "shell",
				"dependsOn": [
					"run nm0",
					"run nm1"
				]
			},
			{
				"label": "run nm0",
				"type": "shell",
				"command": "mc12101run",
				"group": "test",
				"isBackground": true,
				"dependsOn": [
					"Build nm0"
				],
				"args": [
					"${workspaceFolder}/main0d.abs",
					"-a0",
					"-p"
				],
				"problemMatcher": {
					"background": {
						"activeOnStart": true,
						"beginsPattern": "^Batch",
						"endsPattern": "^Start"
					},
					"pattern": [
						{
							"regexp": "^([^\\\\s].*)\\\\((\\\\d+,\\\\d+)\\\\):\\\\s*(.*)$",
							"file": 1,
							"location": 2,
							"message": 3
						}
					]
				},
			},
			{
				"label": "run nm1",
				"type": "shell",
				"command": "mc12101run",
				"args": [
					"${workspaceFolder}/main1d.abs",
					"-a1",
					"-p"
				],
				"group": "test",
				"isBackground": true,
				"dependsOn": [
					"Build nm1"
				],
				"problemMatcher": {
					"background": {
						"activeOnStart": true,
						"beginsPattern": "^Batch",
						"endsPattern": "^Start"
					},
					"pattern": [
						{
							"regexp": "^([^\\\\s].*)\\\\((\\\\d+,\\\\d+)\\\\):\\\\s*(.*)$",
							"file": 1,
							"location": 2,
							"message": 3
						}
					]
				}
			},
		]
	},

	"extensions": {
		"recommendations": [
			"ms-vscode.cpptools",
		]
	},

	"settings": {
		"errecho": "2>&1|cerrecho",
		"files.exclude": {
			"**/.git": true,
			"**/.svn": true,
			"**/.hg": true,
			"**/CVS": true,
			"**/.DS_Store": true,
			"**/Thumbs.db": true,
			"**/*.sln": true,
			"**/*.db": true,
			"**/.vs/*": true,
			"**/bin": true,
			"**/obj": true,
			"**/Debug": true,
			"**/Release": true,
			"**/.vs": true,
			"**/*.abs": true,
			"**/*.filters": true,
			"**/*.vcxproj": true,
			"**/*.vcxproj.user": true,
			"**/*.opendb": true,
			"make_opengl": true,
			"make_x86": true,
			"**/*.xml": true,
			"**/*.xsl": true,
			"**/.sconsign.dblite": true,
			"**/x64": true
		},
		"editor.quickSuggestions": {
			"other": true,
			"comments": false,
			"strings": false
		},
		// Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.
		"editor.acceptSuggestionOnCommitCharacter": true,
		// Controls if suggestions should be accepted on 'Enter' - in addition to 'Tab'. Helps to avoid ambiguity between inserting new lines or accepting suggestions. The value 'smart' means only accept a suggestion with Enter when it makes a textual change
		"editor.acceptSuggestionOnEnter": "on",
		// Controls the delay in ms after which quick suggestions will show up.
		"editor.quickSuggestionsDelay": 10,
		// Controls if suggestions should automatically show up when typing trigger characters
		"editor.suggestOnTriggerCharacters": true,
		// Controls if pressing tab inserts the best suggestion and if tab cycles through other suggestions
		"editor.tabCompletion": "off",
		// Controls whether sorting favours words that appear close to the cursor
		"editor.suggest.localityBonus": true,
		// Controls how suggestions are pre-selected when showing the suggest list
		"editor.suggestSelection": "recentlyUsed",
		// Enable word based suggestions
		"editor.wordBasedSuggestions": true,
		// Enable parameter hints
		"editor.parameterHints.enabled": true,

		"C_Cpp.default.includePath": [
			"${workspaceFolder}/../../include/**",
			"d:\\GIT\\nmOpenGL\\include/**",
			"${env:NMPP}/include/**",
			"${env:HAL}/include/**",
			"${env:VSHELL}/include/**",
			"${env:NMC_GCC_TOOLPATH}/../nmkit/mc12101sdk/**",
			"${env:NMC_GCC_TOOLPATH}/nmc4-ide/**"
		],
		"C_Cpp.default.cStandard": "c11",
		"C_Cpp.default.cppStandard": "c++11",
		"C_Cpp.default.configurationProvider": "ms-vscode.makefile-tools"
		//"C_Cpp.default.intelliSenseMode": "gcc-x64"
	},
	"launch": {
		"version": "0.2.0",
		"configurations": [],
		"compounds": [
			{
				"name": "Launch",
				"configurations": [
					{
						"folder": "make_mc12101",
						"name": "launch host",
					},
					{
						"folder": "make_mc12101",
						"name": "launch nm0"
					},
					{
						"folder": "make_mc12101",
						"name": "launch nm1",
					}
				],
				"stopAll": true,
				"presentation": {
					"hidden": false,
					"group": "",
					"order": 1
				}
				//"preLaunchTask": "run monitor",
			},
			{
				"name": "Launch qemu",
				"configurations": [
					{
						"folder": "make_mc12101",
						"name": "launch host",
					},
					{
						"folder": "make_mc12101",
						"name": "launch nm0-qemu"
					},
					{
						"folder": "make_mc12101",
						"name": "launch nm1-qemu",
					}
				],
				"stopAll": true,
				"presentation": {
					"hidden": false,
					"group": "",
					"order": 1
				}
				//"preLaunchTask": "run monitor",
			},
			{
				"name": "Launch only host",
				"configurations": [
					{
						"folder": "make_mc12101",
						"name": "launch host",
					}
				],
				"preLaunchTask": "run nm",
				"stopAll": true,
				"presentation": {
					"hidden": false,
					"group": "",
					"order": 1
				}
			}
		]
	}
	
}
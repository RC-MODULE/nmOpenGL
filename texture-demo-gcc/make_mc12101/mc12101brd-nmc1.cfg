MEMORY
{
    C1_IMU0: at 0x00000200, len = 0x00007E00;   // NMC1 128kB reserved for boot-loader
    C1_IMU1: at 0x00008000, len = 0x00008000;   // NMC1 128kB
    C1_IMU2: at 0x00010000, len = 0x00008000;   // NMC1 128kB
    C1_IMU3: at 0x00018000, len = 0x00008000;   // NMC1 128kB    
    SHMEM1 : at 0x000B0000, len = 0x00010000;   // shared 256kB
    SYNCRO:  at 0x26FFFFF0, len = 0x00000010;
    EMI2   : at 0x27000000, len = 0x00800000;   // DDR2   512MB
    EMI3   : at 0x27800000, len = 0x00800000;   // DDR2   512MB
}

SEGMENTS
{
    code           : in C1_IMU0;
    data           : in C1_IMU0;
    fast_code      : in C1_IMU0;
    seg_imu0       : in C1_IMU0;
    seg_imu1       : in C1_IMU1;
    seg_imu2       : in C1_IMU2;
    seg_imu3       : in C1_IMU3;
    shared2        : in EMI2;
    shared3        : in EMI3;
    seg_shmem1     : in SHMEM1;
    syncro         :in SYNCRO;

}

SECTIONS
{
    .text          : in shared2;
    .text_hal_libc : in shared2;
    .text_demo3d   : in code;
	.text_hal      : in shared2;
    .text_nmprofiler : in shared2;
    .init          : in code;
    .fini          : in code;
    .heap          : in shared2;
    .heap1         : in shared2;    
    .data          : in data;
    .data_demo3d   : in data;
    .bss           : in data;
    .stack         : in data;    
    .text_nmplv         : in code;
    .text_nmplm         : in code;
    .data_nmplv_L       : in code;
    .data_nmplv_G       : in code;
    .text_nmvcore       : in code;  
    .data_imu0      : in seg_imu0;
    .data_imu1      : in seg_imu1;
    .data_imu2      : in seg_imu2;
    .data_imu3      : in seg_imu3;
    .data_shmem1    : in seg_shmem1;
    .data_shared2   : in shared2;
    .data_shared3   : in shared3;
    .data_hal_syncro: in syncro;
    .rpc_services.bss: in shared2;
    .rpc_services    : in shared2;
}
